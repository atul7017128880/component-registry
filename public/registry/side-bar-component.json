{
  "name": "side-bar-component",
  "type": "registry:block",
  "registryDependencies": [
    "separator",
    "collapsible",
    "button",
    "command",
    "dialog",
    "dropdown-menu",
    "tooltip",
    "avatar",
    "skeleton",
    "badge"
  ],
  "dependencies": [
    "next-themes"
  ],
  "files": [
    {
      "type": "registry:ui",
      "content": "export * from \"./MainSideBarProvider\";\r\n",
      "path": "ui/side-bar/index.tsx",
      "target": "components/ui/side-bar/index.tsx"
    },
    {
      "type": "registry:ui",
      "content": "\"use client\";\r\n\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Moon, Sun } from \"lucide-react\";\r\nimport { useTheme } from \"next-themes\";\r\nimport * as React from \"react\";\r\n\r\nexport function HeaderThemeToggle() {\r\n\tconst { theme, setTheme } = useTheme();\r\n\tconst [mounted, setMounted] = React.useState(false);\r\n\r\n\t// Avoid hydration mismatch by only rendering after mount\r\n\tReact.useEffect(() => {\r\n\t\tsetMounted(true);\r\n\t}, []);\r\n\r\n\tif (!mounted) {\r\n\t\treturn <div className=\"h-9 w-9\" />;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<Button\r\n\t\t\tvariant=\"outline\"\r\n\t\t\tsize=\"sm\"\r\n\t\t\tclassName=\"h-8 w-8 rounded-full border-muted bg-background px-0\"\r\n\t\t\tonClick={() => setTheme(theme === \"dark\" ? \"light\" : \"dark\")}\r\n\t\t\ttitle={theme === \"dark\" ? \"Switch to light mode\" : \"Switch to dark mode\"}\r\n\t\t>\r\n\t\t\t<Sun className=\"dark:-rotate-90 h-4 w-4 rotate-0 scale-100 transition-all dark:scale-0\" />\r\n\t\t\t<Moon className=\"absolute h-4 w-4 rotate-90 scale-0 transition-all dark:rotate-0 dark:scale-100\" />\r\n\t\t\t<span className=\"sr-only\">Toggle theme</span>\r\n\t\t</Button>\r\n\t);\r\n}\r\n",
      "path": "ui/side-bar/header-theme-toggle.tsx",
      "target": "components/ui/side-bar/header-theme-toggle.tsx"
    },
    {
      "type": "registry:ui",
      "content": "\"use client\";\r\n\r\nimport { Button } from \"@/components/ui/button\";\r\nimport { Separator } from \"@/components/ui/separator\";\r\nimport { Search } from \"lucide-react\";\r\nimport type React from \"react\";\r\nimport { useState } from \"react\";\r\nimport { AppSidebar } from \"./app-sidebar\";\r\nimport { BreadcrumbNav } from \"./breadcrumb-nav\";\r\nimport { HeaderThemeToggle } from \"./header-theme-toggle\";\r\nimport { MenuSearchModal } from \"./menu-search-modal\";\r\nimport { SidebarTrigger } from \"./sidebar\";\r\nimport { SidebarInset } from \"./sidebar\";\r\nimport { SidebarProvider } from \"./sidebar\";\r\n\r\nexport default function MainSideBarProvider({\r\n\tchildren,\r\n}: {\r\n\tchildren: React.ReactNode;\r\n}) {\r\n\tconst [searchOpen, setSearchOpen] = useState(false);\r\n\r\n\treturn (\r\n\t\t<SidebarProvider>\r\n\t\t\t<AppSidebar\r\n\t\t\t\tbuttonColors=\"destructiveOnlyTextAndIconColor\"\r\n\t\t\t\tvariant=\"inset\"\r\n\t\t\t/>\r\n\t\t\t<SidebarInset>\r\n\t\t\t\t<div className=\"sticky top-0 z-10 w-full\">\r\n\t\t\t\t\t<header className=\"flex h-16 items-center justify-between border-b bg-background/95 backdrop-blur transition-[width,height] ease-linear group-has-data-[collapsible=icon]/sidebar-wrapper:h-12 supports-[backdrop-filter]:bg-background/60\">\r\n\t\t\t\t\t\t<div className=\"flex items-center gap-2 px-4\">\r\n\t\t\t\t\t\t\t<SidebarTrigger className=\"-ml-1\" />\r\n\t\t\t\t\t\t\t<Separator\r\n\t\t\t\t\t\t\t\torientation=\"vertical\"\r\n\t\t\t\t\t\t\t\tclassName=\"mr-2 data-[orientation=vertical]:h-4\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t<div className=\"mr-4 hidden font-medium md:block\">Xyz Admin</div>\r\n\t\t\t\t\t\t\t<BreadcrumbNav />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className=\"flex items-center gap-3 px-4\">\r\n\t\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\t\tvariant=\"ghost\"\r\n\t\t\t\t\t\t\t\tsize=\"icon\"\r\n\t\t\t\t\t\t\t\tclassName=\"h-8 w-8 rounded-full\"\r\n\t\t\t\t\t\t\t\tonClick={() => setSearchOpen(true)}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<Search className=\"h-4 w-4\" />\r\n\t\t\t\t\t\t\t\t<span className=\"sr-only\">Search</span>\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t\t<HeaderThemeToggle />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</header>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"flex flex-1 flex-col gap-4 p-4 pt-2\">{children}</div>\r\n\t\t\t</SidebarInset>\r\n\t\t\t<MenuSearchModal open={searchOpen} onOpenChange={setSearchOpen} />\r\n\t\t</SidebarProvider>\r\n\t);\r\n}\r\n",
      "path": "ui/side-bar/MainSideBarProvider.tsx",
      "target": "components/ui/side-bar/MainSideBarProvider.tsx"
    },
    {
      "type": "registry:ui",
      "content": "\"use client\";\n\nimport {\n\tAudioWaveform,\n\tChevronsUpDown,\n\tCommand,\n\tGalleryVerticalEnd,\n\tPlus,\n} from \"lucide-react\";\nimport * as React from \"react\";\n\nimport {\n\tDropdownMenu,\n\tDropdownMenuContent,\n\tDropdownMenuItem,\n\tDropdownMenuLabel,\n\tDropdownMenuSeparator,\n\tDropdownMenuShortcut,\n\tDropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport {\n\tSidebarMenu,\n\tSidebarMenuButton,\n\tSidebarMenuItem,\n\tuseSidebar,\n} from \"./sidebar\";\n\nexport function TeamSwitcher({\n\tteams = defaultTeams,\n}: {\n\tteams?: {\n\t\tname: string;\n\t\tlogo: React.ElementType;\n\t\tplan: string;\n\t}[];\n} = {}) {\n\tconst { isMobile } = useSidebar();\n\tconst [activeTeam, setActiveTeam] = React.useState(teams[0]);\n\n\tif (!activeTeam) {\n\t\treturn null;\n\t}\n\n\treturn (\n\t\t<SidebarMenu>\n\t\t\t<SidebarMenuItem>\n\t\t\t\t<DropdownMenu>\n\t\t\t\t\t<DropdownMenuTrigger asChild>\n\t\t\t\t\t\t<SidebarMenuButton\n\t\t\t\t\t\t\tsize=\"lg\"\n\t\t\t\t\t\t\tclassName=\"data-[state=open]:bg-sidebar-accent data-[state=open]:text-sidebar-accent-foreground\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className=\"flex aspect-square size-8 items-center justify-center rounded-lg bg-sidebar-primary text-sidebar-primary-foreground\">\n\t\t\t\t\t\t\t\t<activeTeam.logo className=\"size-4\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"grid flex-1 text-left text-sm leading-tight\">\n\t\t\t\t\t\t\t\t<span className=\"truncate font-medium\">{activeTeam.name}</span>\n\t\t\t\t\t\t\t\t<span className=\"truncate text-xs\">{activeTeam.plan}</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<ChevronsUpDown className=\"ml-auto\" />\n\t\t\t\t\t\t</SidebarMenuButton>\n\t\t\t\t\t</DropdownMenuTrigger>\n\t\t\t\t\t<DropdownMenuContent\n\t\t\t\t\t\tclassName=\"w-(--radix-dropdown-menu-trigger-width) min-w-56 rounded-lg\"\n\t\t\t\t\t\talign=\"start\"\n\t\t\t\t\t\tside={isMobile ? \"bottom\" : \"right\"}\n\t\t\t\t\t\tsideOffset={4}\n\t\t\t\t\t>\n\t\t\t\t\t\t<DropdownMenuLabel className=\"text-muted-foreground text-xs\">\n\t\t\t\t\t\t\tTeams\n\t\t\t\t\t\t</DropdownMenuLabel>\n\t\t\t\t\t\t{teams.map((team, index) => (\n\t\t\t\t\t\t\t<DropdownMenuItem\n\t\t\t\t\t\t\t\tkey={team.name}\n\t\t\t\t\t\t\t\tonClick={() => setActiveTeam(team)}\n\t\t\t\t\t\t\t\tclassName=\"gap-2 p-2\"\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<div className=\"flex size-6 items-center justify-center rounded-md border\">\n\t\t\t\t\t\t\t\t\t<team.logo className=\"size-3.5 shrink-0\" />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t{team.name}\n\t\t\t\t\t\t\t\t<DropdownMenuShortcut>âŒ˜{index + 1}</DropdownMenuShortcut>\n\t\t\t\t\t\t\t</DropdownMenuItem>\n\t\t\t\t\t\t))}\n\t\t\t\t\t\t<DropdownMenuSeparator />\n\t\t\t\t\t\t<DropdownMenuItem className=\"gap-2 p-2\">\n\t\t\t\t\t\t\t<div className=\"flex size-6 items-center justify-center rounded-md border bg-transparent\">\n\t\t\t\t\t\t\t\t<Plus className=\"size-4\" />\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className=\"font-medium text-muted-foreground\">Add team</div>\n\t\t\t\t\t\t</DropdownMenuItem>\n\t\t\t\t\t</DropdownMenuContent>\n\t\t\t\t</DropdownMenu>\n\t\t\t</SidebarMenuItem>\n\t\t</SidebarMenu>\n\t);\n}\n\nconst defaultTeams = [\n\t{\n\t\tname: \"CatCash Admin\",\n\t\tlogo: GalleryVerticalEnd,\n\t\tplan: \"Enterprise\",\n\t},\n\t{\n\t\tname: \"Development\",\n\t\tlogo: AudioWaveform,\n\t\tplan: \"Developer\",\n\t},\n\t{\n\t\tname: \"Production\",\n\t\tlogo: Command,\n\t\tplan: \"Production\",\n\t},\n];\n",
      "path": "ui/side-bar/team-switcher.tsx",
      "target": "components/ui/side-bar/team-switcher.tsx"
    },
    {
      "type": "registry:ui",
      "content": "\"use client\";\r\n\r\nimport { usePathname } from \"next/navigation\";\r\nimport { Fragment } from \"react\";\r\n\r\nimport {\r\n\tBreadcrumb,\r\n\tBreadcrumbItem,\r\n\tBreadcrumbLink,\r\n\tBreadcrumbList,\r\n\tBreadcrumbPage,\r\n\tBreadcrumbSeparator,\r\n} from \"@/components/ui/breadcrumb\";\r\n\r\nexport function BreadcrumbNav() {\r\n\tconst pathname = usePathname();\r\n\r\n\t// Skip the first empty string after splitting\r\n\tconst pathSegments = pathname.split(\"/\").filter((segment) => segment);\r\n\r\n\t// If we're at the root, just show \"Dashboard\"\r\n\tif (pathSegments.length === 0) {\r\n\t\treturn (\r\n\t\t\t<Breadcrumb>\r\n\t\t\t\t<BreadcrumbList>\r\n\t\t\t\t\t<BreadcrumbItem>\r\n\t\t\t\t\t\t<BreadcrumbPage>Dashboard</BreadcrumbPage>\r\n\t\t\t\t\t</BreadcrumbItem>\r\n\t\t\t\t</BreadcrumbList>\r\n\t\t\t</Breadcrumb>\r\n\t\t);\r\n\t}\r\n\r\n\t// Format segment for display (capitalize, replace hyphens with spaces)\r\n\tconst formatSegment = (segment: string) => {\r\n\t\treturn segment\r\n\t\t\t.split(\"-\")\r\n\t\t\t.map((word) => word.charAt(0).toUpperCase() + word.slice(1))\r\n\t\t\t.join(\" \");\r\n\t};\r\n\r\n\treturn (\r\n\t\t<Breadcrumb>\r\n\t\t\t<BreadcrumbList>\r\n\t\t\t\t<BreadcrumbItem className=\"hidden md:block\">\r\n\t\t\t\t\t<BreadcrumbLink href=\"/\">Dashboard</BreadcrumbLink>\r\n\t\t\t\t</BreadcrumbItem>\r\n\r\n\t\t\t\t{pathSegments.map((segment, index) => {\r\n\t\t\t\t\tconst isLastSegment = index === pathSegments.length - 1;\r\n\t\t\t\t\tconst href = `/${pathSegments.slice(0, index + 1).join(\"/\")}`;\r\n\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<Fragment key={segment}>\r\n\t\t\t\t\t\t\t<BreadcrumbSeparator className=\"hidden md:block\" />\r\n\t\t\t\t\t\t\t<BreadcrumbItem>\r\n\t\t\t\t\t\t\t\t{isLastSegment ? (\r\n\t\t\t\t\t\t\t\t\t<BreadcrumbPage>{formatSegment(segment)}</BreadcrumbPage>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<BreadcrumbLink href={href}>\r\n\t\t\t\t\t\t\t\t\t\t{formatSegment(segment)}\r\n\t\t\t\t\t\t\t\t\t</BreadcrumbLink>\r\n\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t</BreadcrumbItem>\r\n\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t);\r\n\t\t\t\t})}\r\n\t\t\t</BreadcrumbList>\r\n\t\t</Breadcrumb>\r\n\t);\r\n}\r\n",
      "path": "ui/side-bar/breadcrumb-nav.tsx",
      "target": "components/ui/side-bar/breadcrumb-nav.tsx"
    },
    {
      "type": "registry:ui",
      "content": "\"use client\";\r\n\r\nimport {\r\n\tCommand,\r\n\tCommandEmpty,\r\n\tCommandGroup,\r\n\tCommandInput,\r\n\tCommandItem,\r\n\tCommandList,\r\n} from \"@/components/ui/command\";\r\nimport {\r\n\tDialog,\r\n\tDialogContent,\r\n\tDialogHeader,\r\n\tDialogTitle,\r\n} from \"@/components/ui/dialog\";\r\nimport { CommandIcon, FolderIcon } from \"lucide-react\";\r\nimport { useRouter } from \"next/navigation\";\r\nimport type React from \"react\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { getMenuList } from \"./menu-list\";\r\n\r\ntype MenuItem = {\r\n\tlabel: string;\r\n\thref: string;\r\n\ticon?: React.ElementType;\r\n\tsubmenus?: { label: string; href: string }[];\r\n};\r\n\r\ntype FlatMenuItem = {\r\n\tlabel: string;\r\n\thref: string;\r\n\tgroup?: string;\r\n\tparent?: string;\r\n};\r\n\r\nexport function MenuSearchModal({\r\n\topen,\r\n\tonOpenChange,\r\n}: {\r\n\topen: boolean;\r\n\tonOpenChange: (open: boolean) => void;\r\n}) {\r\n\tconst [searchResults, setSearchResults] = useState<FlatMenuItem[]>([]);\r\n\tconst [query, setQuery] = useState(\"\");\r\n\tconst router = useRouter();\r\n\r\n\t// Flatten menu items including submenus for easier searching\r\n\tconst flattenMenuItems = (): FlatMenuItem[] => {\r\n\t\tconst menuGroups = getMenuList([]);\r\n\t\tconst flatItems: FlatMenuItem[] = [];\r\n\r\n\t\tmenuGroups.forEach((group) => {\r\n\t\t\tgroup.menus.forEach((menu) => {\r\n\t\t\t\t// Add the main menu item\r\n\t\t\t\tflatItems.push({\r\n\t\t\t\t\tlabel: menu.label,\r\n\t\t\t\t\thref: menu.href,\r\n\t\t\t\t\tgroup: group.groupLabel || \"Main\",\r\n\t\t\t\t});\r\n\r\n\t\t\t\t// Add submenu items if any\r\n\t\t\t\tif (menu.submenus && menu.submenus.length > 0) {\r\n\t\t\t\t\tmenu.submenus.forEach((submenu) => {\r\n\t\t\t\t\t\tflatItems.push({\r\n\t\t\t\t\t\t\tlabel: submenu.label,\r\n\t\t\t\t\t\t\thref: submenu.href,\r\n\t\t\t\t\t\t\tgroup: group.groupLabel || \"Main\",\r\n\t\t\t\t\t\t\tparent: menu.label,\r\n\t\t\t\t\t\t});\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t});\r\n\r\n\t\treturn flatItems;\r\n\t};\r\n\r\n\t// Filter menu items based on search query\r\n\tuseEffect(() => {\r\n\t\tif (query.trim() === \"\") {\r\n\t\t\tsetSearchResults(flattenMenuItems());\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst lowerQuery = query.toLowerCase();\r\n\t\tconst filtered = flattenMenuItems().filter(\r\n\t\t\t(item) =>\r\n\t\t\t\titem.label.toLowerCase().includes(lowerQuery) ||\r\n\t\t\t\t(item.parent && item.parent.toLowerCase().includes(lowerQuery)) ||\r\n\t\t\t\t(item.group && item.group.toLowerCase().includes(lowerQuery)),\r\n\t\t);\r\n\r\n\t\tsetSearchResults(filtered);\r\n\t}, [query]);\r\n\r\n\tconst handleSelect = (item: FlatMenuItem) => {\r\n\t\trouter.push(item.href);\r\n\t\tonOpenChange(false);\r\n\t};\r\n\r\n\t// Handle keyboard shortcut\r\n\tuseEffect(() => {\r\n\t\tconst down = (e: KeyboardEvent) => {\r\n\t\t\tif (e.key === \"k\" && (e.metaKey || e.ctrlKey)) {\r\n\t\t\t\te.preventDefault();\r\n\t\t\t\tonOpenChange(!open);\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tdocument.addEventListener(\"keydown\", down);\r\n\t\treturn () => document.removeEventListener(\"keydown\", down);\r\n\t}, [open, onOpenChange]);\r\n\r\n\treturn (\r\n\t\t<Dialog open={open} onOpenChange={onOpenChange}>\r\n\t\t\t<DialogContent className=\"p-0 sm:max-w-[550px]\">\r\n\t\t\t\t<DialogHeader className=\"px-4 pt-4 pb-0\">\r\n\t\t\t\t\t<DialogTitle>Search Menu</DialogTitle>\r\n\t\t\t\t</DialogHeader>\r\n\t\t\t\t<Command className=\"overflow-hidden rounded-lg border-0 shadow-none\">\r\n\t\t\t\t\t<CommandInput\r\n\t\t\t\t\t\tplaceholder=\"Search menu items...\"\r\n\t\t\t\t\t\tvalue={query}\r\n\t\t\t\t\t\tonValueChange={setQuery}\r\n\t\t\t\t\t\tclassName=\"border-none outline-none focus-visible:ring-0 focus-visible:ring-offset-0\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<CommandList>\r\n\t\t\t\t\t\t<CommandEmpty>No results found.</CommandEmpty>\r\n\t\t\t\t\t\t<CommandGroup heading=\"Menu Items\">\r\n\t\t\t\t\t\t\t{searchResults.map((item, index) => (\r\n\t\t\t\t\t\t\t\t<CommandItem\r\n\t\t\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\t\t\tonSelect={() => handleSelect(item)}\r\n\t\t\t\t\t\t\t\t\tclassName=\"flex items-center py-2\"\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t{item.parent ? (\r\n\t\t\t\t\t\t\t\t\t\t<FolderIcon className=\"mr-2 h-4 w-4 text-muted-foreground\" />\r\n\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t<CommandIcon className=\"mr-2 h-4 w-4 text-muted-foreground\" />\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t<span>{item.label}</span>\r\n\t\t\t\t\t\t\t\t\t{item.parent && (\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"ml-2 text-muted-foreground text-xs\">\r\n\t\t\t\t\t\t\t\t\t\t\tin {item.parent}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t</CommandItem>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</CommandGroup>\r\n\t\t\t\t\t</CommandList>\r\n\t\t\t\t</Command>\r\n\t\t\t</DialogContent>\r\n\t\t</Dialog>\r\n\t);\r\n}\r\n",
      "path": "ui/side-bar/menu-search-modal.tsx",
      "target": "components/ui/side-bar/menu-search-modal.tsx"
    },
    {
      "type": "registry:ui",
      "content": "\"use client\";\n\nimport { ChevronRight } from \"lucide-react\";\nimport { useSelectedLayoutSegments } from \"next/navigation\";\n\nimport {\n\tCollapsible,\n\tCollapsibleContent,\n\tCollapsibleTrigger,\n} from \"@/components/ui/collapsible\";\nimport Link from \"next/link\";\nimport { getMenuList } from \"./menu-list\";\nimport {\n\ttype SideBarColorVariant,\n\tSideBarLink,\n\tSidebarGroup,\n\tSidebarGroupLabel,\n\tSidebarMenu,\n\tSidebarMenuButton,\n\tSidebarMenuItem,\n\tSidebarMenuSub,\n\tSidebarMenuSubItem,\n\tuseSidebar,\n} from \"./sidebar\";\n\nexport function NavMain({ variant }: { variant: SideBarColorVariant }) {\n\tconst segment = useSelectedLayoutSegments();\n\tconst menuGroups = getMenuList(segment);\n\tconst { isMobile, setOpenMobile } = useSidebar();\n\n\t// Function to handle link clicks\n\tconst handleLinkClick = () => {\n\t\t// Only close sidebar on mobile\n\t\tif (isMobile) {\n\t\t\tsetOpenMobile(false);\n\t\t}\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t{menuGroups.map((group, groupIndex) => (\n\t\t\t\t<SidebarGroup key={`group-${group.groupLabel || groupIndex}`}>\n\t\t\t\t\t{group.groupLabel && (\n\t\t\t\t\t\t<SidebarGroupLabel>{group.groupLabel}</SidebarGroupLabel>\n\t\t\t\t\t)}\n\t\t\t\t\t<SidebarMenu>\n\t\t\t\t\t\t{group.menus.map((item) => {\n\t\t\t\t\t\t\t// Check if the item has sub-items\n\t\t\t\t\t\t\tconst hasSubItems = item.submenus && item.submenus.length > 0;\n\n\t\t\t\t\t\t\t// If it has sub-items, render as collapsible\n\t\t\t\t\t\t\tif (hasSubItems) {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<Collapsible\n\t\t\t\t\t\t\t\t\t\tkey={item.label}\n\t\t\t\t\t\t\t\t\t\tasChild\n\t\t\t\t\t\t\t\t\t\tdefaultOpen={item.active}\n\t\t\t\t\t\t\t\t\t\tclassName=\"group/collapsible\"\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<SidebarMenuItem>\n\t\t\t\t\t\t\t\t\t\t\t<CollapsibleTrigger asChild>\n\t\t\t\t\t\t\t\t\t\t\t\t<SidebarMenuButton\n\t\t\t\t\t\t\t\t\t\t\t\t\ttooltip={item.label}\n\t\t\t\t\t\t\t\t\t\t\t\t\tisActive={item.active}\n\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={variant}\n\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.icon && <item.icon />}\n\t\t\t\t\t\t\t\t\t\t\t\t\t<span>{item.label}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<ChevronRight className=\"ml-auto transition-transform duration-200 group-data-[state=open]/collapsible:rotate-90\" />\n\t\t\t\t\t\t\t\t\t\t\t\t</SidebarMenuButton>\n\t\t\t\t\t\t\t\t\t\t\t</CollapsibleTrigger>\n\t\t\t\t\t\t\t\t\t\t\t<CollapsibleContent>\n\t\t\t\t\t\t\t\t\t\t\t\t<SidebarMenuSub className=\"space-y-1\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t{item.submenus.map((subItem, subItemIndex) => (\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<SidebarMenuSubItem key={subItem.label}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<SideBarLink\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex={subItemIndex}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\thref={subItem.href}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={handleLinkClick}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvariant={variant}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tisActive={subItem.active}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<span>{subItem.label}</span>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t</SideBarLink>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</SidebarMenuSubItem>\n\t\t\t\t\t\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t\t\t\t\t\t</SidebarMenuSub>\n\t\t\t\t\t\t\t\t\t\t\t</CollapsibleContent>\n\t\t\t\t\t\t\t\t\t\t</SidebarMenuItem>\n\t\t\t\t\t\t\t\t\t</Collapsible>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// If it doesn't have sub-items, render as a single item\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<SidebarMenuItem key={item.label}>\n\t\t\t\t\t\t\t\t\t<SidebarMenuButton\n\t\t\t\t\t\t\t\t\t\tvariant={variant}\n\t\t\t\t\t\t\t\t\t\tasChild\n\t\t\t\t\t\t\t\t\t\ttooltip={item.label}\n\t\t\t\t\t\t\t\t\t\tisActive={item.active}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\t<Link href={item.href} onClick={handleLinkClick}>\n\t\t\t\t\t\t\t\t\t\t\t{item.icon && <item.icon />}\n\t\t\t\t\t\t\t\t\t\t\t<span>{item.label}</span>\n\t\t\t\t\t\t\t\t\t\t</Link>\n\t\t\t\t\t\t\t\t\t</SidebarMenuButton>\n\t\t\t\t\t\t\t\t</SidebarMenuItem>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</SidebarMenu>\n\t\t\t\t</SidebarGroup>\n\t\t\t))}\n\t\t</>\n\t);\n}\n",
      "path": "ui/side-bar/nav-main.tsx",
      "target": "components/ui/side-bar/nav-main.tsx"
    },
    {
      "type": "registry:ui",
      "content": "\"use client\";\n\nimport {\n\tFolder,\n\tForward,\n\ttype LucideIcon,\n\tMoreHorizontal,\n\tTrash2,\n} from \"lucide-react\";\n\nimport {\n\tDropdownMenu,\n\tDropdownMenuContent,\n\tDropdownMenuItem,\n\tDropdownMenuSeparator,\n\tDropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport {\n\tSidebarGroup,\n\tSidebarGroupLabel,\n\tSidebarMenu,\n\tSidebarMenuAction,\n\tSidebarMenuButton,\n\tSidebarMenuItem,\n\tuseSidebar,\n} from \"./sidebar\";\n\nexport function NavProjects({\n\tprojects,\n}: {\n\tprojects: {\n\t\tname: string;\n\t\turl: string;\n\t\ticon: LucideIcon;\n\t}[];\n}) {\n\tconst { isMobile } = useSidebar();\n\n\treturn (\n\t\t<SidebarGroup className=\"group-data-[collapsible=icon]:hidden\">\n\t\t\t<SidebarGroupLabel>Projects</SidebarGroupLabel>\n\t\t\t<SidebarMenu>\n\t\t\t\t{projects.map((item) => (\n\t\t\t\t\t<SidebarMenuItem key={item.name}>\n\t\t\t\t\t\t<SidebarMenuButton asChild>\n\t\t\t\t\t\t\t<a href={item.url}>\n\t\t\t\t\t\t\t\t<item.icon />\n\t\t\t\t\t\t\t\t<span>{item.name}</span>\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</SidebarMenuButton>\n\t\t\t\t\t\t<DropdownMenu>\n\t\t\t\t\t\t\t<DropdownMenuTrigger asChild>\n\t\t\t\t\t\t\t\t<SidebarMenuAction showOnHover>\n\t\t\t\t\t\t\t\t\t<MoreHorizontal />\n\t\t\t\t\t\t\t\t\t<span className=\"sr-only\">More</span>\n\t\t\t\t\t\t\t\t</SidebarMenuAction>\n\t\t\t\t\t\t\t</DropdownMenuTrigger>\n\t\t\t\t\t\t\t<DropdownMenuContent\n\t\t\t\t\t\t\t\tclassName=\"w-48 rounded-lg\"\n\t\t\t\t\t\t\t\tside={isMobile ? \"bottom\" : \"right\"}\n\t\t\t\t\t\t\t\talign={isMobile ? \"end\" : \"start\"}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<DropdownMenuItem>\n\t\t\t\t\t\t\t\t\t<Folder className=\"text-muted-foreground\" />\n\t\t\t\t\t\t\t\t\t<span>View Project</span>\n\t\t\t\t\t\t\t\t</DropdownMenuItem>\n\t\t\t\t\t\t\t\t<DropdownMenuItem>\n\t\t\t\t\t\t\t\t\t<Forward className=\"text-muted-foreground\" />\n\t\t\t\t\t\t\t\t\t<span>Share Project</span>\n\t\t\t\t\t\t\t\t</DropdownMenuItem>\n\t\t\t\t\t\t\t\t<DropdownMenuSeparator />\n\t\t\t\t\t\t\t\t<DropdownMenuItem>\n\t\t\t\t\t\t\t\t\t<Trash2 className=\"text-muted-foreground\" />\n\t\t\t\t\t\t\t\t\t<span>Delete Project</span>\n\t\t\t\t\t\t\t\t</DropdownMenuItem>\n\t\t\t\t\t\t\t</DropdownMenuContent>\n\t\t\t\t\t\t</DropdownMenu>\n\t\t\t\t\t</SidebarMenuItem>\n\t\t\t\t))}\n\t\t\t\t<SidebarMenuItem>\n\t\t\t\t\t<SidebarMenuButton className=\"text-sidebar-foreground/70\">\n\t\t\t\t\t\t<MoreHorizontal className=\"text-sidebar-foreground/70\" />\n\t\t\t\t\t\t<span>More</span>\n\t\t\t\t\t</SidebarMenuButton>\n\t\t\t\t</SidebarMenuItem>\n\t\t\t</SidebarMenu>\n\t\t</SidebarGroup>\n\t);\n}\n",
      "path": "ui/side-bar/nav-projects.tsx",
      "target": "components/ui/side-bar/nav-projects.tsx"
    },
    {
      "type": "registry:ui",
      "content": "\"use client\";\n\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport {\n\tBadgeCheck,\n\tBell,\n\tChevronsUpDown,\n\tCreditCard,\n\tLogOut,\n\tSettings,\n\tUser,\n} from \"lucide-react\";\nimport { usePathname } from \"next/navigation\";\n\nimport {\n\tDropdownMenu,\n\tDropdownMenuContent,\n\tDropdownMenuGroup,\n\tDropdownMenuItem,\n\tDropdownMenuLabel,\n\tDropdownMenuSeparator,\n\tDropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport {\n\tSidebarGroup,\n\tSidebarGroupLabel,\n\tSidebarMenu,\n\tSidebarMenuButton,\n\tSidebarMenuItem,\n\tuseSidebar,\n} from \"./sidebar\";\nimport { ThemeToggle } from \"./theme-toggle\";\n\ntype NavItemProps = {\n\ttitle: string;\n\thref: string;\n\ticon: React.ElementType;\n\tisActive?: boolean;\n};\n\nexport function NavUser() {\n\tconst { isMobile } = useSidebar();\n\tconst pathname = usePathname();\n\n\tconst isActive = (href: string) => {\n\t\treturn pathname === href;\n\t};\n\n\treturn (\n\t\t<SidebarGroup className=\"mt-auto\">\n\t\t\t<SidebarGroupLabel>\n\t\t\t\t<span>User</span>\n\t\t\t</SidebarGroupLabel>\n\t\t\t<SidebarMenu className=\"space-y-1\">\n\t\t\t\t<SidebarMenuItem>\n\t\t\t\t\t<SidebarMenuButton\n\t\t\t\t\t\tasChild\n\t\t\t\t\t\tisActive={isActive(\"/settings\")}\n\t\t\t\t\t\ttooltip=\"Settings\"\n\t\t\t\t\t>\n\t\t\t\t\t\t<a href=\"/settings\">\n\t\t\t\t\t\t\t<Settings className=\"size-4\" />\n\t\t\t\t\t\t\t<span>Settings</span>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</SidebarMenuButton>\n\t\t\t\t</SidebarMenuItem>\n\t\t\t\t<ThemeToggle variant=\"default\" />\n\t\t\t\t<SidebarMenuItem>\n\t\t\t\t\t<SidebarMenuButton tooltip=\"Logout\">\n\t\t\t\t\t\t<LogOut className=\"size-4\" />\n\t\t\t\t\t\t<span>Logout</span>\n\t\t\t\t\t</SidebarMenuButton>\n\t\t\t\t</SidebarMenuItem>\n\t\t\t</SidebarMenu>\n\t\t</SidebarGroup>\n\t);\n}\n",
      "path": "ui/side-bar/nav-user.tsx",
      "target": "components/ui/side-bar/nav-user.tsx"
    },
    {
      "type": "registry:ui",
      "content": "\"use client\";\n\nimport { Slot } from \"@radix-ui/react-slot\";\nimport { type VariantProps, cva } from \"class-variance-authority\";\nimport { Circle, type Link, PanelLeftIcon } from \"lucide-react\";\nimport * as React from \"react\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Separator } from \"@/components/ui/separator\";\nimport {\n\tSheet,\n\tSheetContent,\n\tSheetDescription,\n\tSheetHeader,\n\tSheetTitle,\n} from \"@/components/ui/sheet\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport {\n\tTooltip,\n\tTooltipContent,\n\tTooltipProvider,\n\tTooltipTrigger,\n} from \"@/components/ui/tooltip\";\nimport { useIsMobile } from \"@/hooks/use-mobile\";\nimport { cn } from \"@/lib/utils\";\nimport LinkNext from \"next/link\";\n\nconst SIDEBAR_COOKIE_NAME = \"sidebar_state\";\nconst SIDEBAR_COOKIE_MAX_AGE = 60 * 60 * 24 * 7;\nconst SIDEBAR_WIDTH = \"16rem\";\nconst SIDEBAR_WIDTH_MOBILE = \"18rem\";\nconst SIDEBAR_WIDTH_ICON = \"3rem\";\nconst SIDEBAR_KEYBOARD_SHORTCUT = \"b\";\n\ntype SidebarContextProps = {\n\tstate: \"expanded\" | \"collapsed\";\n\topen: boolean;\n\tsetOpen: (open: boolean) => void;\n\topenMobile: boolean;\n\tsetOpenMobile: (open: boolean) => void;\n\tisMobile: boolean;\n\ttoggleSidebar: () => void;\n};\n\nconst SidebarContext = React.createContext<SidebarContextProps | null>(null);\n\nfunction useSidebar() {\n\tconst context = React.useContext(SidebarContext);\n\tif (!context) {\n\t\tthrow new Error(\"useSidebar must be used within a SidebarProvider.\");\n\t}\n\n\treturn context;\n}\n\nfunction SidebarProvider({\n\tdefaultOpen = true,\n\topen: openProp,\n\tonOpenChange: setOpenProp,\n\tclassName,\n\tstyle,\n\tchildren,\n\t...props\n}: React.ComponentProps<\"div\"> & {\n\tdefaultOpen?: boolean;\n\topen?: boolean;\n\tonOpenChange?: (open: boolean) => void;\n}) {\n\tconst isMobile = useIsMobile();\n\tconst [openMobile, setOpenMobile] = React.useState(false);\n\n\t// This is the internal state of the sidebar.\n\t// We use openProp and setOpenProp for control from outside the component.\n\tconst [_open, _setOpen] = React.useState(defaultOpen);\n\tconst open = openProp ?? _open;\n\tconst setOpen = React.useCallback(\n\t\t(value: boolean | ((value: boolean) => boolean)) => {\n\t\t\tconst openState = typeof value === \"function\" ? value(open) : value;\n\t\t\tif (setOpenProp) {\n\t\t\t\tsetOpenProp(openState);\n\t\t\t} else {\n\t\t\t\t_setOpen(openState);\n\t\t\t}\n\n\t\t\t// This sets the cookie to keep the sidebar state.\n\t\t\tdocument.cookie = `${SIDEBAR_COOKIE_NAME}=${openState}; path=/; max-age=${SIDEBAR_COOKIE_MAX_AGE}`;\n\t\t},\n\t\t[setOpenProp, open],\n\t);\n\n\t// Helper to toggle the sidebar.\n\tconst toggleSidebar = React.useCallback(() => {\n\t\treturn isMobile ? setOpenMobile((open) => !open) : setOpen((open) => !open);\n\t}, [isMobile, setOpen]);\n\n\t// Adds a keyboard shortcut to toggle the sidebar.\n\tReact.useEffect(() => {\n\t\tconst handleKeyDown = (event: KeyboardEvent) => {\n\t\t\tif (\n\t\t\t\tevent.key === SIDEBAR_KEYBOARD_SHORTCUT &&\n\t\t\t\t(event.metaKey || event.ctrlKey)\n\t\t\t) {\n\t\t\t\tevent.preventDefault();\n\t\t\t\ttoggleSidebar();\n\t\t\t}\n\t\t};\n\n\t\twindow.addEventListener(\"keydown\", handleKeyDown);\n\t\treturn () => window.removeEventListener(\"keydown\", handleKeyDown);\n\t}, [toggleSidebar]);\n\n\t// We add a state so that we can do data-state=\"expanded\" or \"collapsed\".\n\t// This makes it easier to style the sidebar with Tailwind classes.\n\tconst state = open ? \"expanded\" : \"collapsed\";\n\n\tconst contextValue = React.useMemo<SidebarContextProps>(\n\t\t() => ({\n\t\t\tstate,\n\t\t\topen,\n\t\t\tsetOpen,\n\t\t\tisMobile,\n\t\t\topenMobile,\n\t\t\tsetOpenMobile,\n\t\t\ttoggleSidebar,\n\t\t}),\n\t\t[state, open, setOpen, isMobile, openMobile, toggleSidebar],\n\t);\n\n\treturn (\n\t\t<SidebarContext.Provider value={contextValue}>\n\t\t\t<TooltipProvider delayDuration={0}>\n\t\t\t\t<div\n\t\t\t\t\tdata-slot=\"sidebar-wrapper\"\n\t\t\t\t\tstyle={\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"--sidebar-width\": SIDEBAR_WIDTH,\n\t\t\t\t\t\t\t\"--sidebar-width-icon\": SIDEBAR_WIDTH_ICON,\n\t\t\t\t\t\t\t...style,\n\t\t\t\t\t\t} as React.CSSProperties\n\t\t\t\t\t}\n\t\t\t\t\tclassName={cn(\n\t\t\t\t\t\t\"group/sidebar-wrapper flex min-h-svh w-full has-data-[variant=inset]:bg-sidebar\",\n\t\t\t\t\t\tclassName,\n\t\t\t\t\t)}\n\t\t\t\t\t{...props}\n\t\t\t\t>\n\t\t\t\t\t{children}\n\t\t\t\t</div>\n\t\t\t</TooltipProvider>\n\t\t</SidebarContext.Provider>\n\t);\n}\n\nfunction Sidebar({\n\tside = \"left\",\n\tvariant = \"sidebar\",\n\tcollapsible = \"offcanvas\",\n\tclassName,\n\tchildren,\n\t...props\n}: React.ComponentProps<\"div\"> & {\n\tside?: \"left\" | \"right\";\n\tvariant?: \"sidebar\" | \"floating\" | \"inset\";\n\tcollapsible?: \"offcanvas\" | \"icon\" | \"none\";\n}) {\n\tconst { isMobile, state, openMobile, setOpenMobile } = useSidebar();\n\n\tif (collapsible === \"none\") {\n\t\treturn (\n\t\t\t<div\n\t\t\t\tdata-slot=\"sidebar\"\n\t\t\t\tclassName={cn(\n\t\t\t\t\t\"flex h-full w-(--sidebar-width) flex-col bg-sidebar text-sidebar-foreground\",\n\t\t\t\t\tclassName,\n\t\t\t\t)}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t);\n\t}\n\n\tif (isMobile) {\n\t\treturn (\n\t\t\t<Sheet open={openMobile} onOpenChange={setOpenMobile} {...props}>\n\t\t\t\t<SheetContent\n\t\t\t\t\tdata-sidebar=\"sidebar\"\n\t\t\t\t\tdata-slot=\"sidebar\"\n\t\t\t\t\tdata-mobile=\"true\"\n\t\t\t\t\tclassName=\"w-(--sidebar-width) bg-sidebar p-0 text-sidebar-foreground [&>button]:hidden\"\n\t\t\t\t\tstyle={\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\"--sidebar-width\": SIDEBAR_WIDTH_MOBILE,\n\t\t\t\t\t\t} as React.CSSProperties\n\t\t\t\t\t}\n\t\t\t\t\tside={side}\n\t\t\t\t>\n\t\t\t\t\t<SheetHeader className=\"sr-only\">\n\t\t\t\t\t\t<SheetTitle>Sidebar</SheetTitle>\n\t\t\t\t\t\t<SheetDescription>Displays the mobile sidebar.</SheetDescription>\n\t\t\t\t\t</SheetHeader>\n\t\t\t\t\t<div className=\"flex h-full w-full flex-col\">{children}</div>\n\t\t\t\t</SheetContent>\n\t\t\t</Sheet>\n\t\t);\n\t}\n\n\treturn (\n\t\t<div\n\t\t\tclassName=\"group peer hidden text-sidebar-foreground md:block\"\n\t\t\tdata-state={state}\n\t\t\tdata-collapsible={state === \"collapsed\" ? collapsible : \"\"}\n\t\t\tdata-variant={variant}\n\t\t\tdata-side={side}\n\t\t\tdata-slot=\"sidebar\"\n\t\t>\n\t\t\t{/* This is what handles the sidebar gap on desktop */}\n\t\t\t<div\n\t\t\t\tdata-slot=\"sidebar-gap\"\n\t\t\t\tclassName={cn(\n\t\t\t\t\t\"relative w-(--sidebar-width) bg-transparent transition-[width] duration-200 ease-linear\",\n\t\t\t\t\t\"group-data-[collapsible=offcanvas]:w-0\",\n\t\t\t\t\t\"group-data-[side=right]:rotate-180\",\n\t\t\t\t\tvariant === \"floating\" || variant === \"inset\"\n\t\t\t\t\t\t? \"group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+(--spacing(4)))]\"\n\t\t\t\t\t\t: \"group-data-[collapsible=icon]:w-(--sidebar-width-icon)\",\n\t\t\t\t)}\n\t\t\t/>\n\t\t\t<div\n\t\t\t\tdata-slot=\"sidebar-container\"\n\t\t\t\tclassName={cn(\n\t\t\t\t\t\"fixed inset-y-0 z-10 hidden h-svh w-(--sidebar-width) transition-[left,right,width] duration-200 ease-linear md:flex\",\n\t\t\t\t\tside === \"left\"\n\t\t\t\t\t\t? \"left-0 group-data-[collapsible=offcanvas]:left-[calc(var(--sidebar-width)*-1)]\"\n\t\t\t\t\t\t: \"right-0 group-data-[collapsible=offcanvas]:right-[calc(var(--sidebar-width)*-1)]\",\n\t\t\t\t\t// Adjust the padding for floating and inset variants.\n\t\t\t\t\tvariant === \"floating\" || variant === \"inset\"\n\t\t\t\t\t\t? \"p-2 group-data-[collapsible=icon]:w-[calc(var(--sidebar-width-icon)+(--spacing(4))+2px)]\"\n\t\t\t\t\t\t: \"group-data-[collapsible=icon]:w-(--sidebar-width-icon) group-data-[side=left]:border-r group-data-[side=right]:border-l\",\n\t\t\t\t\tclassName,\n\t\t\t\t)}\n\t\t\t\t{...props}\n\t\t\t>\n\t\t\t\t<div\n\t\t\t\t\tdata-sidebar=\"sidebar\"\n\t\t\t\t\tdata-slot=\"sidebar-inner\"\n\t\t\t\t\tclassName=\"flex h-full w-full flex-col bg-sidebar group-data-[variant=floating]:rounded-lg group-data-[variant=floating]:border group-data-[variant=floating]:border-sidebar-border group-data-[variant=floating]:shadow-sm\"\n\t\t\t\t>\n\t\t\t\t\t{children}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nfunction SidebarTrigger({\n\tclassName,\n\tonClick,\n\t...props\n}: React.ComponentProps<typeof Button>) {\n\tconst { toggleSidebar } = useSidebar();\n\n\treturn (\n\t\t<Button\n\t\t\tdata-sidebar=\"trigger\"\n\t\t\tdata-slot=\"sidebar-trigger\"\n\t\t\tvariant=\"ghost\"\n\t\t\tsize=\"icon\"\n\t\t\tclassName={cn(\"size-7\", className)}\n\t\t\tonClick={(event) => {\n\t\t\t\tonClick?.(event);\n\t\t\t\ttoggleSidebar();\n\t\t\t}}\n\t\t\t{...props}\n\t\t>\n\t\t\t<PanelLeftIcon />\n\t\t\t<span className=\"sr-only\">Toggle Sidebar</span>\n\t\t</Button>\n\t);\n}\n\nfunction SidebarRail({ className, ...props }: React.ComponentProps<\"button\">) {\n\tconst { toggleSidebar } = useSidebar();\n\n\treturn (\n\t\t<button\n\t\t\tdata-sidebar=\"rail\"\n\t\t\tdata-slot=\"sidebar-rail\"\n\t\t\taria-label=\"Toggle Sidebar\"\n\t\t\ttabIndex={-1}\n\t\t\tonClick={toggleSidebar}\n\t\t\ttitle=\"Toggle Sidebar\"\n\t\t\tclassName={cn(\n\t\t\t\t\"-translate-x-1/2 group-data-[side=left]:-right-4 absolute inset-y-0 z-20 hidden w-4 transition-all ease-linear after:absolute after:inset-y-0 after:left-1/2 after:w-[2px] hover:after:bg-sidebar-border group-data-[side=right]:left-0 sm:flex\",\n\t\t\t\t\"in-data-[side=left]:cursor-w-resize in-data-[side=right]:cursor-e-resize\",\n\t\t\t\t\"[[data-side=left][data-state=collapsed]_&]:cursor-e-resize [[data-side=right][data-state=collapsed]_&]:cursor-w-resize\",\n\t\t\t\t\"group-data-[collapsible=offcanvas]:translate-x-0 hover:group-data-[collapsible=offcanvas]:bg-sidebar group-data-[collapsible=offcanvas]:after:left-full\",\n\t\t\t\t\"[[data-side=left][data-collapsible=offcanvas]_&]:-right-2\",\n\t\t\t\t\"[[data-side=right][data-collapsible=offcanvas]_&]:-left-2\",\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction SidebarInset({ className, ...props }: React.ComponentProps<\"main\">) {\n\treturn (\n\t\t<main\n\t\t\tdata-slot=\"sidebar-inset\"\n\t\t\tclassName={cn(\n\t\t\t\t\"relative flex w-full flex-1 flex-col bg-background\",\n\t\t\t\t\"md:peer-data-[variant=inset]:peer-data-[state=collapsed]:ml-2 md:peer-data-[variant=inset]:m-2 md:peer-data-[variant=inset]:ml-0 md:peer-data-[variant=inset]:rounded-xl md:peer-data-[variant=inset]:shadow-sm\",\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction SidebarInput({\n\tclassName,\n\t...props\n}: React.ComponentProps<typeof Input>) {\n\treturn (\n\t\t<Input\n\t\t\tdata-slot=\"sidebar-input\"\n\t\t\tdata-sidebar=\"input\"\n\t\t\tclassName={cn(\"h-8 w-full bg-background shadow-none\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction SidebarHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"sidebar-header\"\n\t\t\tdata-sidebar=\"header\"\n\t\t\tclassName={cn(\"flex flex-col gap-2 p-2\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction SidebarFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"sidebar-footer\"\n\t\t\tdata-sidebar=\"footer\"\n\t\t\tclassName={cn(\"flex flex-col gap-2 p-2\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction SidebarSeparator({\n\tclassName,\n\t...props\n}: React.ComponentProps<typeof Separator>) {\n\treturn (\n\t\t<Separator\n\t\t\tdata-slot=\"sidebar-separator\"\n\t\t\tdata-sidebar=\"separator\"\n\t\t\tclassName={cn(\"mx-2 w-auto bg-sidebar-border\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction SidebarContent({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"sidebar-content\"\n\t\t\tdata-sidebar=\"content\"\n\t\t\tclassName={cn(\n\t\t\t\t\"flex min-h-0 flex-1 flex-col gap-0.5 overflow-auto group-data-[collapsible=icon]:overflow-hidden\",\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction SidebarGroup({ className, ...props }: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"sidebar-group\"\n\t\t\tdata-sidebar=\"group\"\n\t\t\tclassName={cn(\n\t\t\t\t\"relative flex w-full min-w-0 flex-col px-2 py-0.5\",\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction SidebarGroupLabel({\n\tclassName,\n\tasChild = false,\n\t...props\n}: React.ComponentProps<\"div\"> & { asChild?: boolean }) {\n\tconst Comp = asChild ? Slot : \"div\";\n\n\treturn (\n\t\t<Comp\n\t\t\tdata-slot=\"sidebar-group-label\"\n\t\t\tdata-sidebar=\"group-label\"\n\t\t\tclassName={cn(\n\t\t\t\t\"flex h-8 shrink-0 items-center rounded-md px-2 font-medium text-sidebar-foreground/70 text-xs outline-hidden ring-sidebar-ring transition-[margin,opacity] duration-200 ease-linear focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n\t\t\t\t\"group-data-[collapsible=icon]:-mt-8 group-data-[collapsible=icon]:opacity-0\",\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction SidebarGroupAction({\n\tclassName,\n\tasChild = false,\n\t...props\n}: React.ComponentProps<\"button\"> & { asChild?: boolean }) {\n\tconst Comp = asChild ? Slot : \"button\";\n\n\treturn (\n\t\t<Comp\n\t\t\tdata-slot=\"sidebar-group-action\"\n\t\t\tdata-sidebar=\"group-action\"\n\t\t\tclassName={cn(\n\t\t\t\t\"absolute top-3.5 right-3 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-hidden ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 [&>svg]:size-4 [&>svg]:shrink-0\",\n\t\t\t\t// Increases the hit area of the button on mobile.\n\t\t\t\t\"after:-inset-2 after:absolute md:after:hidden\",\n\t\t\t\t\"group-data-[collapsible=icon]:hidden\",\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction SidebarGroupContent({\n\tclassName,\n\t...props\n}: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"sidebar-group-content\"\n\t\t\tdata-sidebar=\"group-content\"\n\t\t\tclassName={cn(\"w-full text-sm\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction SidebarMenu({ className, ...props }: React.ComponentProps<\"ul\">) {\n\treturn (\n\t\t<ul\n\t\t\tdata-slot=\"sidebar-menu\"\n\t\t\tdata-sidebar=\"menu\"\n\t\t\tclassName={cn(\"flex w-full min-w-0 flex-col gap-1\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction SidebarMenuItem({ className, ...props }: React.ComponentProps<\"li\">) {\n\treturn (\n\t\t<li\n\t\t\tdata-slot=\"sidebar-menu-item\"\n\t\t\tdata-sidebar=\"menu-item\"\n\t\t\tclassName={cn(\"group/menu-item relative\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\nexport type SideBarColorVariant =\n\t| \"primary\"\n\t| \"default\"\n\t| \"outline\"\n\t| \"secondary\"\n\t| \"muted\"\n\t| \"accent\"\n\t| \"destructive\"\n\t| \"sideBarPrimary\"\n\t| \"sideBarAccent\"\n\t| \"slate\"\n\t| \"slate200\"\n\t| \"primaryOnlyTextAndIconColor\"\n\t| \"secondaryOnlyTextAndIconColor\"\n\t| \"accentOnlyTextAndIconColor\"\n\t| \"destructiveOnlyTextAndIconColor\"\n\t| \"sideBarPrimaryOnlyTextAndIconColor\"\n\t| \"sideBarAccentOnlyTextAndIconColor\";\n// Helper function to manage sidebar colors\nexport const getSidebarColors = (variant: SideBarColorVariant) => {\n\tswitch (variant) {\n\t\tcase \"primary\":\n\t\t\treturn {\n\t\t\t\tbase: \"bg-primary text-primary-foreground dark:bg-primary/90 dark:text-primary-foreground\",\n\t\t\t\thover:\n\t\t\t\t\t\"hover:bg-primary/80 hover:text-primary-foreground dark:hover:bg-primary/70\",\n\t\t\t\tactive: \"active:bg-primary active:text-primary-foreground\",\n\t\t\t\tselectedState:\n\t\t\t\t\t\"data-[active=true]:bg-primary data-[active=true]:text-primary-foreground\",\n\t\t\t};\n\t\tcase \"outline\":\n\t\t\treturn {\n\t\t\t\tbase: \"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] dark:bg-sidebar-background dark:text-sidebar-foreground\",\n\t\t\t\thover:\n\t\t\t\t\t\"hover:bg-sidebar-accent/50 hover:text-sidebar-accent-foreground dark:hover:bg-sidebar-accent/30\",\n\t\t\t\tactive:\n\t\t\t\t\t\"active:bg-sidebar-accent active:text-sidebar-accent-foreground\",\n\t\t\t\tselectedState:\n\t\t\t\t\t\"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n\t\t\t};\n\t\tcase \"secondary\":\n\t\t\treturn {\n\t\t\t\tbase: \"bg-secondary text-secondary-foreground dark:bg-secondary/90 dark:text-secondary-foreground\",\n\t\t\t\thover:\n\t\t\t\t\t\"hover:bg-secondary/80 hover:text-secondary-foreground dark:hover:bg-secondary/70\",\n\t\t\t\tactive: \"active:bg-secondary active:text-secondary-foreground\",\n\t\t\t\tselectedState:\n\t\t\t\t\t\"data-[active=true]:bg-secondary data-[active=true]:text-secondary-foreground\",\n\t\t\t};\n\t\tcase \"muted\":\n\t\t\treturn {\n\t\t\t\tbase: \"bg-muted text-muted-foreground dark:bg-muted/90 dark:text-muted-foreground\",\n\t\t\t\thover:\n\t\t\t\t\t\"hover:bg-muted/80 hover:text-muted-foreground dark:hover:bg-muted/70\",\n\t\t\t\tactive: \"active:bg-muted active:text-muted-foreground\",\n\t\t\t\tselectedState:\n\t\t\t\t\t\"data-[active=true]:bg-muted data-[active=true]:text-muted-foreground\",\n\t\t\t};\n\t\tcase \"accent\":\n\t\t\treturn {\n\t\t\t\tbase: \"bg-accent text-accent-foreground dark:bg-accent/90 dark:text-accent-foreground\",\n\t\t\t\thover:\n\t\t\t\t\t\"hover:bg-accent/80 hover:text-accent-foreground dark:hover:bg-accent/70\",\n\t\t\t\tactive: \"active:bg-accent active:text-accent-foreground\",\n\t\t\t\tselectedState:\n\t\t\t\t\t\"data-[active=true]:bg-accent data-[active=true]:text-accent-foreground\",\n\t\t\t};\n\t\tcase \"destructive\":\n\t\t\treturn {\n\t\t\t\tbase: \"bg-destructive text-destructive-foreground dark:bg-destructive/90 dark:text-destructive-foreground\",\n\t\t\t\thover:\n\t\t\t\t\t\"hover:bg-destructive/80 hover:text-destructive-foreground dark:hover:bg-destructive/70\",\n\t\t\t\tactive: \"active:bg-destructive active:text-destructive-foreground\",\n\t\t\t\tselectedState:\n\t\t\t\t\t\"data-[active=true]:bg-destructive data-[active=true]:text-destructive-foreground\",\n\t\t\t};\n\t\tcase \"sideBarPrimary\":\n\t\t\treturn {\n\t\t\t\tbase: \"bg-sidebar-primary text-sidebar-primary-foreground dark:bg-sidebar-primary/90 dark:text-sidebar-primary-foreground\",\n\t\t\t\thover:\n\t\t\t\t\t\"hover:bg-sidebar-primary/80 hover:text-sidebar-primary-foreground dark:hover:bg-sidebar-primary/70\",\n\t\t\t\tactive:\n\t\t\t\t\t\"active:bg-sidebar-primary active:text-sidebar-primary-foreground\",\n\t\t\t\tselectedState:\n\t\t\t\t\t\"data-[active=true]:bg-sidebar-primary data-[active=true]:text-sidebar-primary-foreground\",\n\t\t\t};\n\t\tcase \"sideBarAccent\":\n\t\t\treturn {\n\t\t\t\tbase: \"bg-sidebar-accent text-sidebar-accent-foreground dark:bg-sidebar-accent/90 dark:text-sidebar-accent-foreground\",\n\t\t\t\thover:\n\t\t\t\t\t\"hover:bg-sidebar-accent/80 hover:text-sidebar-accent-foreground dark:hover:bg-sidebar-accent/70\",\n\t\t\t\tactive:\n\t\t\t\t\t\"active:bg-sidebar-accent active:text-sidebar-accent-foreground\",\n\t\t\t\tselectedState:\n\t\t\t\t\t\"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n\t\t\t};\n\t\tcase \"slate\":\n\t\t\treturn {\n\t\t\t\tbase: \"bg-slate-100 text-slate-500-foreground dark:bg-slate-800 dark:text-slate-300\",\n\t\t\t\thover:\n\t\t\t\t\t\"hover:bg-slate-100/80 hover:text-slate-500-foreground dark:hover:bg-slate-700\",\n\t\t\t\tactive: \"active:bg-slate-100 active:text-slate-500-foreground\",\n\t\t\t\tselectedState:\n\t\t\t\t\t\"data-[active=true]:bg-slate-100 data-[active=true]:text-slate-500-foreground dark:data-[active=true]:bg-slate-700\",\n\t\t\t};\n\t\tcase \"slate200\":\n\t\t\treturn {\n\t\t\t\tbase: \"bg-slate-200 text-slate-500-foreground dark:bg-slate-700 dark:text-slate-300\",\n\t\t\t\thover:\n\t\t\t\t\t\"hover:bg-slate-200/80 hover:text-slate-500-foreground dark:hover:bg-slate-600\",\n\t\t\t\tactive: \"active:bg-slate-200 active:text-slate-500-foreground\",\n\t\t\t\tselectedState:\n\t\t\t\t\t\"data-[active=true]:bg-slate-200 data-[active=true]:text-slate-500-foreground dark:data-[active=true]:bg-slate-600\",\n\t\t\t};\n\t\tcase \"primaryOnlyTextAndIconColor\":\n\t\t\treturn {\n\t\t\t\tbase: \"text-primary dark:bg-slate-700 dark:text-primary\",\n\t\t\t\thover:\n\t\t\t\t\t\"hover:bg-slate-200/80 hover:text-primary/90 dark:hover:bg-slate-600 dark:hover:text-primary/90\",\n\t\t\t\tactive: \"active:bg-slate-200 active:text-primary\",\n\t\t\t\tselectedState:\n\t\t\t\t\t\"data-[active=true]:bg-slate-200 data-[active=true]:text-primary dark:data-[active=true]:bg-slate-600\",\n\t\t\t};\n\t\tcase \"secondaryOnlyTextAndIconColor\":\n\t\t\treturn {\n\t\t\t\tbase: \"bg-slate-200 text-secondary dark:bg-slate-700 dark:text-secondary\",\n\t\t\t\thover:\n\t\t\t\t\t\"hover:bg-slate-200/80 hover:text-secondary/90 dark:hover:bg-slate-600 dark:hover:text-secondary/90\",\n\t\t\t\tactive: \"active:bg-slate-200 active:text-secondary\",\n\t\t\t\tselectedState:\n\t\t\t\t\t\"data-[active=true]:bg-slate-200 data-[active=true]:text-secondary dark:data-[active=true]:bg-slate-600\",\n\t\t\t};\n\t\tcase \"accentOnlyTextAndIconColor\":\n\t\t\treturn {\n\t\t\t\tbase: \"bg-slate-200 text-accent dark:bg-slate-700 dark:text-accent\",\n\t\t\t\thover:\n\t\t\t\t\t\"hover:bg-slate-200/80 hover:text-accent/90 dark:hover:bg-slate-600 dark:hover:text-accent/90\",\n\t\t\t\tactive: \"active:bg-slate-200 active:text-accent\",\n\t\t\t\tselectedState:\n\t\t\t\t\t\"data-[active=true]:bg-slate-200 data-[active=true]:text-accent dark:data-[active=true]:bg-slate-600\",\n\t\t\t};\n\t\tcase \"destructiveOnlyTextAndIconColor\":\n\t\t\treturn {\n\t\t\t\tbase: \"bg-slate-200 text-destructive dark:bg-slate-700 dark:text-destructive\",\n\t\t\t\thover:\n\t\t\t\t\t\"hover:bg-slate-200/80 hover:text-destructive/90 dark:hover:bg-slate-600 dark:hover:text-destructive/90\",\n\t\t\t\tactive: \"active:bg-slate-200 active:text-destructive\",\n\t\t\t\tselectedState:\n\t\t\t\t\t\"data-[active=true]:bg-slate-200 data-[active=true]:text-destructive dark:data-[active=true]:bg-slate-600\",\n\t\t\t};\n\t\tcase \"sideBarPrimaryOnlyTextAndIconColor\":\n\t\t\treturn {\n\t\t\t\tbase: \"bg-slate-200 text-sidebar-primary dark:bg-slate-700 dark:text-sidebar-primary\",\n\t\t\t\thover:\n\t\t\t\t\t\"hover:bg-slate-200/80 hover:text-sidebar-primary/90 dark:hover:bg-slate-600 dark:hover:text-sidebar-primary/90\",\n\t\t\t\tactive: \"active:bg-slate-200 active:text-sidebar-primary\",\n\t\t\t\tselectedState:\n\t\t\t\t\t\"data-[active=true]:bg-slate-200 data-[active=true]:text-sidebar-primary dark:data-[active=true]:bg-slate-600\",\n\t\t\t};\n\t\tcase \"sideBarAccentOnlyTextAndIconColor\":\n\t\t\treturn {\n\t\t\t\tbase: \"bg-slate-200 text-sidebar-accent dark:bg-slate-700 dark:text-sidebar-accent\",\n\t\t\t\thover:\n\t\t\t\t\t\"hover:bg-slate-200/80 hover:text-sidebar-accent/90 dark:hover:bg-slate-600 dark:hover:text-sidebar-accent/90\",\n\t\t\t\tactive: \"active:bg-slate-200 active:text-sidebar-accent\",\n\t\t\t\tselectedState:\n\t\t\t\t\t\"data-[active=true]:bg-slate-200 data-[active=true]:text-sidebar-accent dark:data-[active=true]:bg-slate-600\",\n\t\t\t};\n\t\tdefault:\n\t\t\treturn {\n\t\t\t\tbase: \"\",\n\t\t\t\thover:\n\t\t\t\t\t\"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground dark:hover:bg-sidebar-accent/30\",\n\t\t\t\tactive:\n\t\t\t\t\t\"active:bg-sidebar-accent active:text-sidebar-accent-foreground\",\n\t\t\t\tselectedState:\n\t\t\t\t\t\"data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground\",\n\t\t\t};\n\t}\n};\n\nconst sidebarMenuButtonVariants = cva(\n\t\"peer/menu-button flex w-full items-center gap-2 overflow-hidden rounded-md p-2 text-left text-sm outline-hidden ring-sidebar-ring transition-[width,height,padding] focus-visible:ring-2 disabled:pointer-events-none disabled:opacity-50 group-has-data-[sidebar=menu-action]/menu-item:pr-8 aria-disabled:pointer-events-none aria-disabled:opacity-50 group-data-[collapsible=icon]:size-8! group-data-[collapsible=icon]:p-2! [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0\",\n\t{\n\t\tvariants: {\n\t\t\tvariant: {\n\t\t\t\tdefault:\n\t\t\t\t\t\"hover:bg-sidebar-accent hover:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground dark:hover:bg-sidebar-accent/30\",\n\t\t\t\tprimary:\n\t\t\t\t\t\"px-2 py-5 hover:bg-primary/80 hover:text-primary-foreground active:bg-primary active:text-primary-foreground data-[active=true]:bg-primary data-[active=true]:text-primary-foreground data-[state=open]:hover:bg-primary/80 data-[state=open]:hover:text-primary-foreground dark:hover:bg-primary/70\",\n\t\t\t\tsecondary:\n\t\t\t\t\t\"px-2 py-5 hover:bg-secondary/80 hover:text-secondary-foreground active:bg-secondary active:text-secondary-foreground data-[active=true]:bg-secondary data-[active=true]:text-secondary-foreground data-[state=open]:hover:bg-secondary/80 data-[state=open]:hover:text-secondary-foreground dark:hover:bg-secondary/70\",\n\t\t\t\tmuted:\n\t\t\t\t\t\"px-2 py-5 hover:bg-muted/80 hover:text-muted-foreground active:bg-muted active:text-muted-foreground data-[active=true]:bg-muted data-[active=true]:text-muted-foreground data-[state=open]:hover:bg-muted/80 data-[state=open]:hover:text-muted-foreground dark:hover:bg-muted/70\",\n\t\t\t\taccent:\n\t\t\t\t\t\"px-2 py-5 hover:bg-accent/80 hover:text-accent-foreground active:bg-accent active:text-accent-foreground data-[active=true]:bg-accent data-[active=true]:text-accent-foreground data-[state=open]:hover:bg-accent/80 data-[state=open]:hover:text-accent-foreground dark:hover:bg-accent/70\",\n\t\t\t\tdestructive:\n\t\t\t\t\t\"px-2 py-5 hover:bg-destructive/80 hover:text-destructive-foreground active:bg-destructive active:text-destructive-foreground data-[active=true]:bg-destructive data-[active=true]:text-destructive-foreground data-[state=open]:hover:bg-destructive/80 data-[state=open]:hover:text-destructive-foreground dark:hover:bg-destructive/70\",\n\t\t\t\tsideBarPrimary:\n\t\t\t\t\t\"px-2 py-5 hover:bg-sidebar-primary/80 hover:text-sidebar-primary-foreground active:bg-sidebar-primary active:text-sidebar-primary-foreground data-[active=true]:bg-sidebar-primary data-[active=true]:text-sidebar-primary-foreground data-[state=open]:hover:bg-sidebar-primary/80 data-[state=open]:hover:text-sidebar-primary-foreground dark:hover:bg-sidebar-primary/70\",\n\t\t\t\tsideBarAccent:\n\t\t\t\t\t\"px-2 py-5 hover:bg-sidebar-accent/80 hover:text-sidebar-accent-foreground active:bg-sidebar-accent active:text-sidebar-accent-foreground data-[active=true]:bg-sidebar-accent data-[active=true]:text-sidebar-accent-foreground data-[state=open]:hover:bg-sidebar-accent/80 data-[state=open]:hover:text-sidebar-accent-foreground dark:hover:bg-sidebar-accent/70\",\n\t\t\t\tslate:\n\t\t\t\t\t\"px-2 py-5 hover:bg-slate-100 hover:text-slate-500-foreground active:bg-slate-100 active:text-slate-500-foreground data-[active=true]:bg-slate-100 data-[active=true]:text-slate-500-foreground data-[state=open]:hover:bg-slate-100 data-[state=open]:hover:text-slate-500-foreground dark:data-[active=true]:bg-slate-700 dark:hover:bg-slate-700\",\n\t\t\t\tslate200:\n\t\t\t\t\t\"px-2 py-5 hover:bg-slate-200 hover:text-slate-500-foreground active:bg-slate-200 active:text-slate-500-foreground data-[active=true]:bg-slate-200 data-[active=true]:text-slate-500-foreground data-[state=open]:hover:bg-slate-200 data-[state=open]:hover:text-slate-500-foreground dark:data-[active=true]:bg-slate-600 dark:hover:bg-slate-600\",\n\t\t\t\toutline:\n\t\t\t\t\t\"bg-background shadow-[0_0_0_1px_hsl(var(--sidebar-border))] hover:bg-sidebar-accent hover:text-sidebar-accent-foreground hover:shadow-[0_0_0_1px_hsl(var(--sidebar-accent))] data-[state=open]:hover:bg-sidebar-accent data-[state=open]:hover:text-sidebar-accent-foreground dark:hover:bg-sidebar-accent/30\",\n\t\t\t\tprimaryOnlyTextAndIconColor:\n\t\t\t\t\t\" px-2 py-5 hover:bg-slate-200/80 hover:text-primary/90 active:bg-slate-200 active:text-primary data-[active=true]:bg-slate-200 data-[active=true]:text-primary data-[active=true]:text-primary data-[state=open]:hover:bg-slate-200/80 data-[state=open]:hover:text-primary/90 dark:data-[active=true]:bg-slate-600 dark:data-[active=true]:text-primary dark:hover:bg-slate-600\",\n\t\t\t\tsecondaryOnlyTextAndIconColor:\n\t\t\t\t\t\" px-2 py-5 hover:bg-slate-200/80 hover:text-secondary/90 active:bg-slate-200 active:text-secondary data-[active=true]:bg-slate-200 data-[active=true]:text-secondary data-[active=true]:text-secondary data-[state=open]:hover:bg-slate-200/80 data-[state=open]:hover:text-secondary/90 dark:bg-slate-700 dark:data-[active=true]:bg-slate-600 dark:data-[active=true]:text-secondary dark:hover:bg-slate-600\",\n\t\t\t\taccentOnlyTextAndIconColor:\n\t\t\t\t\t\" px-2 py-5 hover:bg-slate-200/80 hover:text-accent/90 active:bg-slate-200 active:text-accent data-[active=true]:bg-slate-200 data-[active=true]:text-accent data-[active=true]:text-accent data-[state=open]:hover:bg-slate-200/80 data-[state=open]:hover:text-accent/90 dark:bg-slate-700 dark:data-[active=true]:bg-slate-600 dark:data-[active=true]:text-accent dark:hover:bg-slate-600\",\n\t\t\t\tdestructiveOnlyTextAndIconColor:\n\t\t\t\t\t\"px-2 py-5 hover:bg-slate-200/80 hover:text-destructive/90 active:bg-slate-200 active:text-destructive data-[active=true]:bg-slate-200 data-[active=true]:text-destructive data-[active=true]:text-destructive data-[state=open]:hover:bg-slate-200/80 data-[state=open]:hover:text-destructive/90 dark:bg-slate-700 dark:data-[active=true]:bg-slate-600 dark:data-[active=true]:text-destructive dark:hover:bg-slate-600\",\n\t\t\t\tsideBarPrimaryOnlyTextAndIconColor:\n\t\t\t\t\t\" px-2 py-5 hover:bg-slate-200/80 hover:text-sidebar-primary/90 active:bg-slate-200 active:text-sidebar-primary data-[active=true]:bg-slate-200 data-[active=true]:text-sidebar-primary data-[active=true]:text-sidebar-primary data-[state=open]:hover:bg-slate-200/80 data-[state=open]:hover:text-sidebar-primary/90 dark:bg-slate-700 dark:data-[active=true]:bg-slate-600 dark:data-[active=true]:text-sidebar-primary dark:hover:bg-slate-600\",\n\t\t\t\tsideBarAccentOnlyTextAndIconColor:\n\t\t\t\t\t\" px-2 py-5 hover:bg-slate-200/80 hover:text-sidebar-accent/90 active:bg-slate-200 active:text-sidebar-accent data-[active=true]:bg-slate-200 data-[active=true]:text-sidebar-accent data-[active=true]:text-sidebar-accent data-[state=open]:hover:bg-slate-200/80 data-[state=open]:hover:text-sidebar-accent/90 dark:bg-slate-700 dark:data-[active=true]:bg-slate-600 dark:data-[active=true]:text-sidebar-accent dark:hover:bg-slate-600\",\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tdefault: \"h-8 text-sm\",\n\t\t\t\tsm: \"h-7 text-xs\",\n\t\t\t\tlg: \"h-12 text-sm group-data-[collapsible=icon]:p-0!\",\n\t\t\t},\n\t\t},\n\t\tdefaultVariants: {\n\t\t\tvariant: \"default\",\n\t\t\tsize: \"default\",\n\t\t},\n\t},\n);\n\nexport const SideBarLink = ({\n\tvariant = \"default\",\n\tsize = \"default\",\n\tclassName,\n\tisActive = false,\n\thref,\n\tchildren,\n\tindex,\n\t...props\n}: React.ComponentProps<typeof LinkNext> &\n\tVariantProps<typeof sidebarMenuButtonVariants> & {\n\t\tisActive?: boolean;\n\t\tindex?: number;\n\t}) => {\n\treturn (\n\t\t<LinkNext\n\t\t\thref={href ?? \"\"}\n\t\t\tdata-slot=\"sidebar-menu-button\"\n\t\t\tdata-sidebar=\"menu-button\"\n\t\t\tdata-size={size}\n\t\t\tdata-active={isActive}\n\t\t\tclassName={cn(\n\t\t\t\tsidebarMenuButtonVariants({ variant, size }),\n\t\t\t\tisActive && \"font-medium\",\n\t\t\t\tclassName,\n\t\t\t\tindex !== 0 && \"-mt-1\",\n\t\t\t)}\n\t\t\t{...props}\n\t\t>\n\t\t\t<span className=\"relative flex items-center gap-1.5\">\n\t\t\t\t{isActive && (\n\t\t\t\t\t<Circle className=\"size-1.5 flex-shrink-0 fill-sidebar-primary stroke-sidebar-primary\" />\n\t\t\t\t)}\n\t\t\t\t{children}\n\t\t\t</span>\n\t\t</LinkNext>\n\t);\n};\n\nfunction SidebarMenuButton({\n\tasChild = false,\n\tisActive = false,\n\tvariant = \"default\",\n\tsize = \"default\",\n\ttooltip,\n\tclassName,\n\t...props\n}: React.ComponentProps<\"button\"> & {\n\tasChild?: boolean;\n\tisActive?: boolean;\n\ttooltip?: string | React.ComponentProps<typeof TooltipContent>;\n} & VariantProps<typeof sidebarMenuButtonVariants>) {\n\tconst Comp = asChild ? Slot : \"button\";\n\tconst { isMobile, state } = useSidebar();\n\n\tconst button = (\n\t\t<Comp\n\t\t\tdata-slot=\"sidebar-menu-button\"\n\t\t\tdata-sidebar=\"menu-button\"\n\t\t\tdata-size={size}\n\t\t\tdata-active={isActive}\n\t\t\tclassName={cn(sidebarMenuButtonVariants({ variant, size }), className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n\n\tif (!tooltip) {\n\t\treturn button;\n\t}\n\n\tif (typeof tooltip === \"string\") {\n\t\ttooltip = {\n\t\t\tchildren: tooltip,\n\t\t};\n\t}\n\n\treturn (\n\t\t<Tooltip>\n\t\t\t<TooltipTrigger asChild>{button}</TooltipTrigger>\n\t\t\t<TooltipContent\n\t\t\t\tside=\"right\"\n\t\t\t\talign=\"center\"\n\t\t\t\thidden={state !== \"collapsed\" || isMobile}\n\t\t\t\t{...tooltip}\n\t\t\t/>\n\t\t</Tooltip>\n\t);\n}\n\nfunction SidebarMenuAction({\n\tclassName,\n\tasChild = false,\n\tshowOnHover = false,\n\t...props\n}: React.ComponentProps<\"button\"> & {\n\tasChild?: boolean;\n\tshowOnHover?: boolean;\n}) {\n\tconst Comp = asChild ? Slot : \"button\";\n\n\treturn (\n\t\t<Comp\n\t\t\tdata-slot=\"sidebar-menu-action\"\n\t\t\tdata-sidebar=\"menu-action\"\n\t\t\tclassName={cn(\n\t\t\t\t\"absolute top-1.5 right-1 flex aspect-square w-5 items-center justify-center rounded-md p-0 text-sidebar-foreground outline-hidden ring-sidebar-ring transition-transform hover:bg-sidebar-accent hover:text-sidebar-accent-foreground focus-visible:ring-2 peer-hover/menu-button:text-sidebar-accent-foreground [&>svg]:size-4 [&>svg]:shrink-0\",\n\t\t\t\t// Increases the hit area of the button on mobile.\n\t\t\t\t\"after:-inset-2 after:absolute md:after:hidden\",\n\t\t\t\t\"peer-data-[size=sm]/menu-button:top-1\",\n\t\t\t\t\"peer-data-[size=default]/menu-button:top-1.5\",\n\t\t\t\t\"peer-data-[size=lg]/menu-button:top-2.5\",\n\t\t\t\t\"group-data-[collapsible=icon]:hidden\",\n\t\t\t\tshowOnHover &&\n\t\t\t\t\t\"group-focus-within/menu-item:opacity-100 group-hover/menu-item:opacity-100 data-[state=open]:opacity-100 peer-data-[active=true]/menu-button:text-sidebar-accent-foreground md:opacity-0\",\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction SidebarMenuBadge({\n\tclassName,\n\t...props\n}: React.ComponentProps<\"div\">) {\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"sidebar-menu-badge\"\n\t\t\tdata-sidebar=\"menu-badge\"\n\t\t\tclassName={cn(\n\t\t\t\t\"pointer-events-none absolute right-1 flex h-5 min-w-5 select-none items-center justify-center rounded-md px-1 font-medium text-sidebar-foreground text-xs tabular-nums\",\n\t\t\t\t\"peer-hover/menu-button:text-sidebar-accent-foreground peer-data-[active=true]/menu-button:text-sidebar-accent-foreground\",\n\t\t\t\t\"peer-data-[size=sm]/menu-button:top-1\",\n\t\t\t\t\"peer-data-[size=default]/menu-button:top-1.5\",\n\t\t\t\t\"peer-data-[size=lg]/menu-button:top-2.5\",\n\t\t\t\t\"group-data-[collapsible=icon]:hidden\",\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction SidebarMenuSkeleton({\n\tclassName,\n\tshowIcon = false,\n\t...props\n}: React.ComponentProps<\"div\"> & {\n\tshowIcon?: boolean;\n}) {\n\t// Random width between 50 to 90%.\n\tconst width = React.useMemo(() => {\n\t\treturn `${Math.floor(Math.random() * 40) + 50}%`;\n\t}, []);\n\n\treturn (\n\t\t<div\n\t\t\tdata-slot=\"sidebar-menu-skeleton\"\n\t\t\tdata-sidebar=\"menu-skeleton\"\n\t\t\tclassName={cn(\"flex h-8 items-center gap-2 rounded-md px-2\", className)}\n\t\t\t{...props}\n\t\t>\n\t\t\t{showIcon && (\n\t\t\t\t<Skeleton\n\t\t\t\t\tclassName=\"size-4 rounded-md\"\n\t\t\t\t\tdata-sidebar=\"menu-skeleton-icon\"\n\t\t\t\t/>\n\t\t\t)}\n\t\t\t<Skeleton\n\t\t\t\tclassName=\"h-4 max-w-(--skeleton-width) flex-1\"\n\t\t\t\tdata-sidebar=\"menu-skeleton-text\"\n\t\t\t\tstyle={\n\t\t\t\t\t{\n\t\t\t\t\t\t\"--skeleton-width\": width,\n\t\t\t\t\t} as React.CSSProperties\n\t\t\t\t}\n\t\t\t/>\n\t\t</div>\n\t);\n}\n\nfunction SidebarMenuSub({ className, ...props }: React.ComponentProps<\"ul\">) {\n\treturn (\n\t\t<ul\n\t\t\tdata-slot=\"sidebar-menu-sub\"\n\t\t\tdata-sidebar=\"menu-sub\"\n\t\t\tclassName={cn(\n\t\t\t\t\"ml-4 flex min-w-0 flex-col gap-1.5 border-sidebar-border/50 border-l-2 py-1 pl-3\",\n\t\t\t\t\"group-data-[collapsible=icon]:hidden\",\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction SidebarMenuSubItem({\n\tclassName,\n\t...props\n}: React.ComponentProps<\"li\">) {\n\treturn (\n\t\t<li\n\t\t\tdata-slot=\"sidebar-menu-sub-item\"\n\t\t\tdata-sidebar=\"menu-sub-item\"\n\t\t\tclassName={cn(\"group/menu-sub-item relative\", className)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nfunction SidebarMenuSubButton({\n\tasChild = false,\n\tsize = \"md\",\n\tisActive = false,\n\tclassName,\n\tvariant = \"default\",\n\t...props\n}: React.ComponentProps<\"a\"> & {\n\tasChild?: boolean;\n\tsize?: \"sm\" | \"md\";\n\tisActive?: boolean;\n\tvariant?: SideBarColorVariant;\n}) {\n\tconst Comp = asChild ? Slot : \"a\";\n\tconst colors = getSidebarColors(variant);\n\n\treturn (\n\t\t<Comp\n\t\t\tdata-slot=\"sidebar-menu-sub-button\"\n\t\t\tdata-sidebar=\"menu-sub-button\"\n\t\t\tdata-size={size}\n\t\t\tdata-active={isActive}\n\t\t\tclassName={cn(\n\t\t\t\t\"flex min-w-0 items-center gap-2 overflow-hidden rounded-md px-3 py-1.5 outline-hidden ring-sidebar-ring transition-colors\",\n\t\t\t\tcolors.hover,\n\t\t\t\tcolors.active,\n\t\t\t\tisActive && colors.base,\n\t\t\t\tisActive && colors.selectedState,\n\t\t\t\t\"focus-visible:ring-2 disabled:pointer-events-none disabled:opacity-50 aria-disabled:pointer-events-none aria-disabled:opacity-50 [&>span:last-child]:truncate [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:text-sidebar-accent-foreground/80\",\n\t\t\t\tisActive && \"[&>svg]:text-current\",\n\t\t\t\tsize === \"sm\" && \"py-1 text-xs\",\n\t\t\t\tsize === \"md\" && \"text-sm\",\n\t\t\t\t\"group-data-[collapsible=icon]:hidden\",\n\t\t\t\tclassName,\n\t\t\t)}\n\t\t\t{...props}\n\t\t/>\n\t);\n}\n\nexport {\n\tSidebar,\n\tSidebarContent,\n\tSidebarFooter,\n\tSidebarGroup,\n\tSidebarGroupAction,\n\tSidebarGroupContent,\n\tSidebarGroupLabel,\n\tSidebarHeader,\n\tSidebarInput,\n\tSidebarInset,\n\tSidebarMenu,\n\tSidebarMenuAction,\n\tSidebarMenuBadge,\n\tSidebarMenuButton,\n\tSidebarMenuItem,\n\tSidebarMenuSkeleton,\n\tSidebarMenuSub,\n\tSidebarMenuSubButton,\n\tSidebarMenuSubItem,\n\tSidebarProvider,\n\tSidebarRail,\n\tSidebarSeparator,\n\tSidebarTrigger,\n\tuseSidebar,\n};\n",
      "path": "ui/side-bar/sidebar.tsx",
      "target": "components/ui/side-bar/sidebar.tsx"
    },
    {
      "type": "registry:ui",
      "content": "\"use client\";\n\nimport type * as React from \"react\";\n\nimport { NavMain } from \"./nav-main\";\nimport { NavProjects } from \"./nav-projects\";\nimport { NavUser } from \"./nav-user\";\nimport {\n\ttype SideBarColorVariant,\n\tSidebar,\n\tSidebarContent,\n\tSidebarFooter,\n\tSidebarHeader,\n\tSidebarRail,\n} from \"./sidebar\";\nimport { TeamSwitcher } from \"./team-switcher\";\n\nexport function AppSidebar({\n\tbuttonColors,\n\t...props\n}: React.ComponentProps<typeof Sidebar> & {\n\tbuttonColors: SideBarColorVariant;\n}) {\n\treturn (\n\t\t<Sidebar collapsible=\"icon\" {...props}>\n\t\t\t<SidebarHeader>\n\t\t\t\t<TeamSwitcher />\n\t\t\t</SidebarHeader>\n\t\t\t<SidebarContent>\n\t\t\t\t<NavMain variant={buttonColors} />\n\t\t\t</SidebarContent>\n\t\t\t<SidebarFooter>\n\t\t\t\t<NavUser />\n\t\t\t</SidebarFooter>\n\t\t\t<SidebarRail />\n\t\t</Sidebar>\n\t);\n}\n",
      "path": "ui/side-bar/app-sidebar.tsx",
      "target": "components/ui/side-bar/app-sidebar.tsx"
    },
    {
      "type": "registry:ui",
      "content": "import {\r\n\tAlertTriangle,\r\n\tAudioWaveform,\r\n\tBookOpen,\r\n\tBot,\r\n\tCommand,\r\n\tExternalLink,\r\n\tFrame,\r\n\tGalleryVerticalEnd,\r\n\tInfo,\r\n\tLayoutDashboard,\r\n\tLayoutGrid,\r\n\ttype LucideIcon,\r\n\tMapIcon,\r\n\tPieChart,\r\n\tSettings2,\r\n\tSquareTerminal,\r\n\tTicket,\r\n\tUser,\r\n\tUserPlus,\r\n\tUserX,\r\n} from \"lucide-react\";\r\n\r\ntype Submenu = {\r\n\thref: string;\r\n\tlabel: string;\r\n\tactive: boolean;\r\n};\r\n\r\ntype Menu = {\r\n\thref: string;\r\n\tlabel: string;\r\n\tactive: boolean;\r\n\ticon: LucideIcon;\r\n\tsubmenus: Submenu[];\r\n};\r\n\r\ntype Group = {\r\n\tgroupLabel: string;\r\n\tmenus: Menu[];\r\n};\r\n\r\nexport function getMenuList(pathnames: string[]): Group[] {\r\n\t// Helper function to check if a route is active\r\n\tconst isActive = (route: string) => {\r\n\t\t// For route segments starting with parentheses\r\n\t\tif (route.startsWith(\"(\")) {\r\n\t\t\treturn pathnames.some((segment) => segment === route);\r\n\t\t}\r\n\r\n\t\t// For regular routes, check if any pathname segment contains this route\r\n\t\treturn pathnames.some(\r\n\t\t\t(segment) =>\r\n\t\t\t\tsegment === route.replace(/^\\//, \"\") ||\r\n\t\t\t\tsegment.includes(route.replace(/^\\//, \"\")),\r\n\t\t);\r\n\t};\r\n\r\n\tconst menuGroups = [\r\n\t\t{\r\n\t\t\tgroupLabel: \"\",\r\n\t\t\tmenus: [\r\n\t\t\t\t{\r\n\t\t\t\t\thref: \"/dashboard\",\r\n\t\t\t\t\tlabel: \"Dashboard\",\r\n\t\t\t\t\tactive: isActive(\"/dashboard\"),\r\n\t\t\t\t\ticon: LayoutGrid,\r\n\t\t\t\t\tsubmenus: [],\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tgroupLabel: \"\",\r\n\t\t\tmenus: [\r\n\t\t\t\t{\r\n\t\t\t\t\thref: \"/jobs\",\r\n\t\t\t\t\tlabel: \"Job And Token\",\r\n\t\t\t\t\tactive: isActive(\"/jobs\"),\r\n\t\t\t\t\ticon: LayoutGrid,\r\n\t\t\t\t\tsubmenus: [],\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tgroupLabel: \"Users Actions\",\r\n\t\t\tmenus: [\r\n\t\t\t\t{\r\n\t\t\t\t\thref: \"/users\",\r\n\t\t\t\t\tlabel: \"Users\",\r\n\t\t\t\t\tactive: isActive(\"(users)\"),\r\n\t\t\t\t\ticon: User,\r\n\t\t\t\t\tsubmenus: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\thref: \"/create-user\",\r\n\t\t\t\t\t\t\tlabel: \"Create User\",\r\n\t\t\t\t\t\t\tactive: isActive(\"/create-user\"),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\thref: \"/update-user\",\r\n\t\t\t\t\t\t\tlabel: \"Update User\",\r\n\t\t\t\t\t\t\tactive: isActive(\"/update-user\"),\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tgroupLabel: \"\",\r\n\t\t\tmenus: [\r\n\t\t\t\t{\r\n\t\t\t\t\thref: \"/delete-user\",\r\n\t\t\t\t\tlabel: \"Delete User\",\r\n\t\t\t\t\tactive: isActive(\"/delete-user\"),\r\n\t\t\t\t\ticon: UserX,\r\n\t\t\t\t\tsubmenus: [],\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tgroupLabel: \"\",\r\n\t\t\tmenus: [\r\n\t\t\t\t{\r\n\t\t\t\t\thref: \"/orders\",\r\n\t\t\t\t\tlabel: \"Orders\",\r\n\t\t\t\t\tactive: isActive(\"/orders\"),\r\n\t\t\t\t\ticon: Ticket,\r\n\t\t\t\t\tsubmenus: [],\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tgroupLabel: \"API Integrations\",\r\n\t\t\tmenus: [\r\n\t\t\t\t{\r\n\t\t\t\t\thref: \"/xoxoday-requests\",\r\n\t\t\t\t\tlabel: \"Xoxoday Requests\",\r\n\t\t\t\t\tactive: isActive(\"/xoxoday-requests\"),\r\n\t\t\t\t\ticon: ExternalLink,\r\n\t\t\t\t\tsubmenus: [],\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t\t{\r\n\t\t\tgroupLabel: \"Payments\",\r\n\t\t\tmenus: [\r\n\t\t\t\t{\r\n\t\t\t\t\thref: \"/payments-failed\",\r\n\t\t\t\t\tlabel: \"Failed Payments\",\r\n\t\t\t\t\tactive: isActive(\"/payments-failed\"),\r\n\t\t\t\t\ticon: AlertTriangle,\r\n\t\t\t\t\tsubmenus: [],\r\n\t\t\t\t},\r\n\t\t\t],\r\n\t\t},\r\n\t];\r\n\r\n\t// Make sure parent menu is active if any of its submenu is active\r\n\tfor (const group of menuGroups) {\r\n\t\tfor (const menu of group.menus) {\r\n\t\t\tif (menu.submenus.length > 0) {\r\n\t\t\t\tconst hasActiveSubmenu = menu.submenus.some(\r\n\t\t\t\t\t(submenu) => submenu.active,\r\n\t\t\t\t);\r\n\t\t\t\tif (hasActiveSubmenu) {\r\n\t\t\t\t\tmenu.active = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn menuGroups;\r\n}\r\n",
      "path": "ui/side-bar/menu-list.tsx",
      "target": "components/ui/side-bar/menu-list.tsx"
    },
    {
      "type": "registry:ui",
      "content": "\"use client\";\r\n\r\nimport { Moon, Sun } from \"lucide-react\";\r\nimport { useTheme } from \"next-themes\";\r\nimport * as React from \"react\";\r\n\r\nimport {\r\n\tTooltip,\r\n\tTooltipContent,\r\n\tTooltipTrigger,\r\n} from \"@/components/ui/tooltip\";\r\nimport {\r\n\ttype SideBarColorVariant,\r\n\tSidebarMenuButton,\r\n\tSidebarMenuItem,\r\n} from \"./sidebar\";\r\n\r\nexport function ThemeToggle({\r\n\tvariant = \"default\",\r\n}: { variant?: SideBarColorVariant }) {\r\n\tconst { theme, setTheme } = useTheme();\r\n\tconst [mounted, setMounted] = React.useState(false);\r\n\r\n\t// Avoid hydration mismatch by only rendering after mount\r\n\tReact.useEffect(() => {\r\n\t\tsetMounted(true);\r\n\t}, []);\r\n\r\n\tif (!mounted) {\r\n\t\treturn (\r\n\t\t\t<SidebarMenuItem>\r\n\t\t\t\t<SidebarMenuButton variant={variant}>\r\n\t\t\t\t\t<div className=\"size-4\" />\r\n\t\t\t\t\t<span>Theme</span>\r\n\t\t\t\t</SidebarMenuButton>\r\n\t\t\t</SidebarMenuItem>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<SidebarMenuItem>\r\n\t\t\t<Tooltip>\r\n\t\t\t\t<TooltipTrigger asChild>\r\n\t\t\t\t\t<SidebarMenuButton\r\n\t\t\t\t\t\tvariant={variant}\r\n\t\t\t\t\t\tonClick={() => setTheme(theme === \"dark\" ? \"light\" : \"dark\")}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{theme === \"dark\" ? (\r\n\t\t\t\t\t\t\t<Moon className=\"size-4\" />\r\n\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t<Sun className=\"size-4\" />\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t<span>Theme: {theme === \"dark\" ? \"Dark\" : \"Light\"}</span>\r\n\t\t\t\t\t</SidebarMenuButton>\r\n\t\t\t\t</TooltipTrigger>\r\n\t\t\t\t<TooltipContent side=\"right\">Toggle theme</TooltipContent>\r\n\t\t\t</Tooltip>\r\n\t\t</SidebarMenuItem>\r\n\t);\r\n}\r\n",
      "path": "ui/side-bar/theme-toggle.tsx",
      "target": "components/ui/side-bar/theme-toggle.tsx"
    }
  ]
}